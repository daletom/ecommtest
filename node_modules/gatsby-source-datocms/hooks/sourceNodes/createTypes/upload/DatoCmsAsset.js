"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var buildFluidFields = require('../utils/buildFluidFields');

var buildFixedFields = require('../utils/buildFixedFields');

module.exports = function (_ref) {
  var actions = _ref.actions,
      schema = _ref.schema,
      store = _ref.store;
  actions.createTypes([schema.buildObjectType({
    name: 'DatoCmsAsset',
    extensions: {
      infer: false
    },
    fields: _objectSpread({
      size: 'Int',
      width: 'Int',
      height: 'Int',
      path: 'String',
      format: 'String',
      isImage: 'Boolean',
      createdAt: {
        type: 'Date',
        extensions: {
          dateformat: {}
        }
      },
      url: 'String',
      notes: 'String',
      author: 'String',
      copyright: 'String',
      originalId: 'String'
    }, buildFluidFields(), {}, buildFixedFields()),
    interfaces: ['Node']
  })]);
};