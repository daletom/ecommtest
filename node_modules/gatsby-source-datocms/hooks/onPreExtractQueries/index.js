"use strict";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var fs = require('fs-extra');

var path = require('path');

module.exports =
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(_ref) {
    var store, getNodesByType, program;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            store = _ref.store, getNodesByType = _ref.getNodesByType;
            program = store.getState().program;

            if (!(getNodesByType("DatoCmsAsset").length > 0)) {
              _context.next = 5;
              break;
            }

            _context.next = 5;
            return fs.copy(path.join(__dirname, '..', '..', 'fragments', 'asset.js'), "".concat(program.directory, "/.cache/fragments/datocms-asset-fragments.js"));

          case 5:
            if (!(getNodesByType("DatoCmsSeoMetaTags").length > 0)) {
              _context.next = 8;
              break;
            }

            _context.next = 8;
            return fs.copy(path.join(__dirname, '..', '..', 'fragments', 'seo.js'), "".concat(program.directory, "/.cache/fragments/datocms-seo-fragments.js"));

          case 8:
            if (!(getNodesByType("DatoCmsFaviconMetaTags").length > 0)) {
              _context.next = 11;
              break;
            }

            _context.next = 11;
            return fs.copy(path.join(__dirname, '..', '..', 'fragments', 'favicon.js'), "".concat(program.directory, "/.cache/fragments/datocms-favicon-fragments.js"));

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();